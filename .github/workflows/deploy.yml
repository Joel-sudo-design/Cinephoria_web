name: CI-CD Prod

on:
  push:
    branches: ["master"]
  workflow_dispatch: {}

concurrency:
  group: "deploy-prod"
  cancel-in-progress: false

env:
  IMAGE_NAME: ghcr.io/joel-sudo-design/cinephoria_web/app
  CADDY_IMAGE_NAME: ghcr.io/joel-sudo-design/cinephoria_web/caddy
  DEPLOY_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v5

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/setup-buildx-action@v3

      - name: Build & Push APP
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.DEPLOY_TAG }}
          build-args: |
            APP_ENV=prod
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build & Push CADDY
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.caddy
          push: true
          tags: ${{ env.CADDY_IMAGE_NAME }}:${{ env.DEPLOY_TAG }}
          build-args: |
            APP_TAG=${{ env.DEPLOY_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v5

      - name: Ensure remote dir exists
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: debian
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p /home/debian/apps/cinephoria

      - name: Upload compose & Caddyfile.prod
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: debian
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "docker-compose.prod.yml,Caddyfile.prod"
          target: "/home/debian/apps/cinephoria/"
          overwrite: true
          rm: true

      - name: SSH deploy
        uses: appleboy/ssh-action@v1.2.2
        env:
          PROD_ENV: ${{ secrets.PROD_ENV }}
          DEPLOY_TAG: ${{ github.sha }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: debian
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: GITHUB_TOKEN,PROD_ENV,DEPLOY_TAG
          script: |
            set -e
            APP_DIR="/home/debian/apps/cinephoria"
            cd "$APP_DIR"

            umask 177
            printf '%s\n' "$PROD_ENV" | tr -d '\r' > .env
            chmod 600 .env

            echo "${{ secrets.GITHUB_TOKEN }}" | sudo docker login ghcr.io -u "${{ github.actor }}" --password-stdin

            if sudo docker compose version >/dev/null 2>&1; then
              COMPOSE="sudo docker compose"
            else
              COMPOSE="sudo docker-compose"
            fi

            echo "APP_TAG=${DEPLOY_TAG}" >> .env

            cp -f docker-compose.prod.yml docker-compose.yml
            rm -f docker-compose.prod.yml

            $COMPOSE --env-file .env config -q

            $COMPOSE --env-file .env pull app reverse-proxy
            $COMPOSE --env-file .env up -d --no-deps app reverse-proxy

            sudo docker image prune -f || true
